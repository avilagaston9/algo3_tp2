@startuml
!theme reddress-darkblue
autonumber
skinparam style strictuml
skinparam BackGroundColor lavender
skinparam RoundCorner 7
skinparam SequenceGroupFontColor black
skinparam SequenceGroupBorderColor black
skinparam SequenceGroupBorderThickness 0.5
skinparam ArrowFontColor black
skinparam ArrowColor black
skinparam ActorFontColor black
skinparam participantFontSize 12
skinparam SequenceLifeLineBackGroundColor 2e2e2e

TestCase -> ":AlgoThieft" as algoT: viajarA(ciudadDestino:Ciudad)
algoT -> "unPolicia:Policia" as policia: ViajarA(ciudadDestino:Ciudad)
policia -> "ciudadActual:Ciudad" as ciudadActual: calcularDistancia(ciudadDestino:Ciudad))
ciudadActual -> "ciudadadDestino:Ciudad" as ciudadDestino: calcularDistancia(coordenadas:Coordenadas)
ciudadDestino -> "coordenadas:Coordenadas" as coordenadas: calcularDistancia(otrasCoordenadas:Coordenadas)

ciudadDestino <- coordenadas: int distancia
ciudadActual <- ciudadDestino: int distancia
policia <- ciudadActual: int distancia

policia -> "rango:Rango" as rango: tiempoConsumidoPorViaje(distancia)
policia <- rango: int cantidadHoras

policia -> "tiempoTranscurrido:Tiempo" as tiempo: sumarHoras(int cantidadHoras)

policia -> policia: setCiudadActual(ciudadDestino:Ciudad))

@enduml