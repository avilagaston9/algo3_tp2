@startuml
'https://plantuml.com/sequence-diagram

!theme reddress-darkblue
skinparam style strictuml
skinparam BackGroundColor white
skinparam RoundCorner 7
skinparam SequenceGroupFontColor black
skinparam SequenceGroupBorderColor black
skinparam SequenceGroupBorderThickness 0.5
skinparam ArrowFontColor black
skinparam ArrowColor black
skinparam ActorFontColor black
skinparam participantFontSize 12
skinparam SequenceLifeLineBackGroundColor 2e2e2e
autonumber

TestCase -> "algothieft:AlgoThieft" as algothieft: visitarEdificio(banco:Edificio)
algothieft -> "novato:Policia" as unPolicia: visitarEdificio(banco)
unPolicia -> "Montreal:Ciudad" as montreal : visitarEdificio(banco, novato:Rango, tiempo:Tiempo)
montreal ->"bancoFrances: Edificio" as edificio: serVisitado(proximaCiudad:Ciudad, novato:Rango, tiempo:Tiempo, numeroVisita:Integer)
edificio -> "proximaCiudad:Ciudad" as proximaCiudad : darPistaDe(banco)
proximaCiudad -> "bancoProvincia:Edificio" as Edificio : darPista()
"bancoProvincia:Edificio" as Edificio --> "proximaCiudad:Ciudad" as proximaCiudad: unaPista
proximaCiudad -->edificio : unaPista
edificio-> "tiempo:Tiempo" as tiempo: sumarHoras(1)
edificio --> "Montreal:Ciudad" as montreal : unaPista

montreal -> montreal : sumarVisita()
unPolicia <-- montreal: unaPista
unPolicia --> algothieft: unaPista

TestCase <-- algothieft: unaPista


@enduml